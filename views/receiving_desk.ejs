<html>
<head>
<style>
    .receiving-desk {
        flex: 1; 
        display: flex;
        align-items: center;
        justify-content: center; 
        margin-right: -0.5rem;
    }
    .search-by {
        flex: 1; 
        display: flex;
        align-items: center;
        justify-content: center; 
        margin-right: -0.5rem;
    }
    .radio-buttons {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: -0.5rem;
    }
    .search-box {
        flex: 1; 
        display: flex;
        align-items: center;
        justify-content: center; 
        margin-right: -0.5rem;
        margin-bottom: 1rem;
    }
    .part-display {
        flex: 1; 
        display: flex;
        align-items: center;
        justify-content: center; 
        margin-right: -0.5rem;
    }
    #query {
        height: 2.8rem;
        width: 35rem;
        background: #f5f5f5;
        outline: none;
        border: none;
        border-radius: 1.625rem;
        padding: 0 1rem;
        font-size: 1.rem;
        font-family: Arial, Helvetica, sans-serif;
    }
    .search-form {
        display: flex;
        align-items: center;
    }
    .search-button {
        width: 3.5rem;
        height: 2.8rem;
        margin-left: -3.5rem;
        background: none;
        border: none;
        outline: none;
    }
    .plus-minus-button {
        background-color: #e8c7c8;
        border-radius: 5px;
        padding: 5px 10px;
        border: #e8c7c8
    }
    .quantity {
        padding: 0 10px;
    }
</style>
    <title>Warehouse Receiving Desk</title>
</head>

<body>
    <%- include('partials/navbar_warehouse') %>
    <div class='receiving-desk'>
        <h3>Receiving Desk</h3>
        <br><br>
    </div>

    <div class='search-by'>Search by:</div>
    <form id='search-form' class='search-form'>
        <div class='radio-container'></div>
        <div class='radio-buttons'>
            <input type='radio' id='Description' name='searchBy' value='Description' checked>
            <label for='Description'>Description</label>
            <input type='radio' id='Part ID' name='searchBy' value='Part ID'>
            <label for='Part ID'>Part ID</label>
        </div>
        </div>
        <div class='search-container'>
            <div class='search-box'>
                <input type='search' id='query' name='query' placeholder='Search for a part to update its quantity on hand'>
                <button class='search-button'>
                    <svg style='width:24px;height:24px' viewBox='0 0 24 24'>
                        <path fill='#666666' d='M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z' />
                    </svg>
                </button>
            </div>
        </div>
    </form>

    <div class='part-display'>
    <table padding='15px' id='inventory-table' style='border: 1px solid;'></table>
    </div>

    <script>
        const searchForm = document.getElementById('search-form')
        searchForm.addEventListener('submit', event => {
            event.preventDefault()

            const searchData = new FormData(searchForm)

            fetchAndDisplayInventory(searchData.get('query'), searchData.get('searchBy'))
        })
        
        function fetchAndDisplayInventory(query, searchBy) {
            fetch('/warehouse/api/inventory/search', {
                method: `POST`,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ query, searchBy })
            })
                .then(response => response.json())
                .then(parts => {
                    const inventoryTable = document.getElementById('inventory-table')
                    inventoryTable.innerHTML = ''
                    
                    const headingRow = document.createElement('tr')
                
                    const partNumberHeader = document.createElement('th')
                    partNumberHeader.setAttribute('style', 'text-align: center; padding: 20px')
                    partNumberHeader.textContent = 'Part ID'

                    const descriptionHeader = document.createElement('th')
                    descriptionHeader.setAttribute('style', 'text-align: center; padding: 20px')
                    descriptionHeader.textContent = 'Description'

                    const quantityHeader = document.createElement('th')
                    quantityHeader.setAttribute('style', 'padding: 20px')
                    quantityHeader.textContent = 'Quantity on Hand'

                    inventoryTable.appendChild(headingRow)
                    headingRow.appendChild(partNumberHeader)
                    headingRow.appendChild(descriptionHeader)
                    headingRow.appendChild(quantityHeader)

                    parts.forEach(part => {
                        const partRow = document.createElement('tr')

                        const partNumber = document.createElement('td')
                        partNumber.setAttribute('style', 'text-align: center; padding: 20px')
                        partNumber.textContent = part.number
                        
                        const partDescription = document.createElement('td')
                        partDescription.setAttribute('style', 'text-align: center; padding: 20px')
                        partDescription.textContent = part.description

                        const buttonDataCell = document.createElement('td')
                        buttonDataCell.setAttribute('style', 'text-align: center;')

                        const decrementButton = document.createElement('button')
                        decrementButton.className = 'plus-minus-button'
                        decrementButton.setAttribute('type', 'button')
                        decrementButton.addEventListener('click', () => decrementQuantity(part.number, part.quantity, query, searchBy))

                        const decrementIcon = document.createElement('i')
                        decrementIcon.className = 'bi bi-dash-lg'

                        const quantity = document.createElement('span')
                        quantity.className = 'quantity'
                        quantity.textContent = part.quantity

                        const incrementButton = document.createElement('button')
                        incrementButton.className = 'plus-minus-button'
                        incrementButton.setAttribute('type', 'button')
                        incrementButton.addEventListener('click', () => incrementQuantity(part.number, part.quantity, query, searchBy))

                        const incrementIcon = document.createElement('i')
                        incrementIcon.className = 'bi bi-plus-lg'

                        inventoryTable.appendChild(partRow)
                        partRow.appendChild(partNumber)
                        partRow.appendChild(partDescription)
                        partRow.appendChild(buttonDataCell)
                        buttonDataCell.appendChild(decrementButton)
                        decrementButton.appendChild(decrementIcon)
                        buttonDataCell.appendChild(quantity)
                        buttonDataCell.appendChild(incrementButton)
                        incrementButton.appendChild(incrementIcon)
                    })
                })
                .catch(error => {
                    console.error('Error fetching inventory:', error)
                })
        }

        function decrementQuantity(partNumber, quantity, query, searchBy) {
            newQuantity = quantity - 1
            if (newQuantity < 0) {
                return
            }

            updateQuantityOnHand(partNumber, newQuantity, query, searchBy)
        }

        function incrementQuantity(partNumber, quantity, query, searchBy) {
            newQuantity = quantity + 1

            updateQuantityOnHand(partNumber, newQuantity, query, searchBy)
        }

        function updateQuantityOnHand(partNumber, newQuantity, query, searchBy) {
            fetch('/warehouse/api/inventory/update-quantity', {
                method: `POST`,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ partNumber, newQuantity })
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data)

                    fetchAndDisplayInventory(query, searchBy)
                })
                .catch(error => {
                    console.error('Error:', error)
                })
        }        

        window.addEventListener('load', fetchAndDisplayInventory('', 'Description'))
    </script>
</body>
</html>